/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Grtgbe as PrismaGrtgbe } from "@prisma/client";

export class GrtgbeServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.GrtgbeCountArgs, "select">): Promise<number> {
    return this.prisma.grtgbe.count(args);
  }

  async grtgbes(args: Prisma.GrtgbeFindManyArgs): Promise<PrismaGrtgbe[]> {
    return this.prisma.grtgbe.findMany(args);
  }
  async grtgbe(
    args: Prisma.GrtgbeFindUniqueArgs
  ): Promise<PrismaGrtgbe | null> {
    return this.prisma.grtgbe.findUnique(args);
  }
  async createGrtgbe(args: Prisma.GrtgbeCreateArgs): Promise<PrismaGrtgbe> {
    return this.prisma.grtgbe.create(args);
  }
  async updateGrtgbe(args: Prisma.GrtgbeUpdateArgs): Promise<PrismaGrtgbe> {
    return this.prisma.grtgbe.update(args);
  }
  async deleteGrtgbe(args: Prisma.GrtgbeDeleteArgs): Promise<PrismaGrtgbe> {
    return this.prisma.grtgbe.delete(args);
  }
}
